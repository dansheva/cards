{"version":3,"sources":["components/common/SuperButton/SuperButton.module.css","components/common/SuperCheckbox/SuperCheckbox.module.css","components/pages/TestPage/TestPage.module.css","components/pages/Profile/Profile.tsx","components/pages/Registration/Registration.tsx","components/common/SuperButton/SuperButton.tsx","components/common/SuperInputText/SuperInputText.tsx","components/common/SuperCheckbox/SuperCheckbox.tsx","components/pages/TestPage/TestPage.tsx","components/pages/NewPassword/NewPassword.tsx","components/pages/Login/Login.tsx","components/pages/ForgotYourPassword/ForgotYourPassword.tsx","components/pages/404/404.tsx","components/App.tsx","reportWebVitals.ts","redux/forgot-your-password-reducer/forgot-your-password-reducer.ts","redux/login-reducer/login-reducer.ts","redux/new-password-reducer/new-password-reducer.ts","redux/profile-reducer/profile-reducer.ts","redux/registration-reducer/registration-reducer.ts","redux/store.ts","index.tsx","components/common/SuperInputText/SuperInputText.module.css"],"names":["module","exports","Profile","Registration","SuperButton","red","className","restProps","finalClassName","s","button","default","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","TestPage","useState","text","setText","showAlert","alert","setChecked","column","blue","onClick","disabled","NewPassword","Login","ForgotYourPassword","NotFound","PATH","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","forgotMyPassword","state","action","login","newPassword","profile","registration","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85ac1c93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3S9x5\",\"button\":\"SuperButton_button__2R1Gc\",\"red\":\"SuperButton_red__1KMqM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__1IfT8\",\"label\":\"SuperCheckbox_label__1fgrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"TestPage_column__2Kep6\"};","import React from \"react\";\nimport s from './Profile.module.css'\n\nexport const Profile = () => {\n    return(\n        <h1>Profile</h1>\n    )\n}\n\nexport default Profile","import React from \"react\";\nimport s from './Registration.module.css'\n\nexport const Registration = () => {\n    return(\n        <h1>Registration</h1>\n    )\n}\n\nexport default Registration","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <div>\n                <input\n                    type={'text'}\n                    onChange={onChangeCallback}\n                    onKeyPress={onKeyPressCallback}\n                    className={finalInputClassName}\n\n                    {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                />\n                {error && <span className={finalSpanClassName}>{error}</span>}\n            </div>\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e);\n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n    };\n\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from \"react\";\nimport s from './TestPage.module.css'\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\n\nexport const TestPage = () => {\n\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'Error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n\n\n    return (\n        <>\n            <h1>Test Page</h1>\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    Some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n        </>\n\n    )\n}\n\nexport default TestPage","import React from \"react\";\nimport s from './NewPassword.module.css'\n\nexport const NewPassword = () => {\n    return(\n        <h1>NewPassword</h1>\n    )\n}\n\nexport default NewPassword","import React from \"react\";\nimport s from './Login.module.css'\n\nexport const Login = () => {\n    return(\n        <h1>Login</h1>\n    )\n}\n\nexport default Login","import React from \"react\";\nimport s from './ForgotYourPassword.module.css'\n\nexport const ForgotYourPassword = () => {\n    return(\n        <h1>ForgotYourPassword</h1>\n    )\n}\n\nexport default ForgotYourPassword","import React from \"react\";\nimport s from './404.module.css'\n\nexport const NotFound = () => {\n    return(\n        <h1>404</h1>\n    )\n}\n\nexport default NotFound","import React from 'react';\nimport './App.css';\nimport {Routes, Route} from 'react-router-dom';\nimport Profile from \"./pages/Profile/Profile\";\nimport Registration from \"./pages/Registration/Registration\";\nimport TestPage from \"./pages/TestPage/TestPage\";\nimport NewPassword from \"./pages/NewPassword/NewPassword\";\nimport Login from \"./pages/Login/Login\";\nimport ForgotYourPassword from \"./pages/ForgotYourPassword/ForgotYourPassword\";\nimport NotFound from \"./pages/404/404\";\n\nexport const PATH = {\n    PROFILE: '/profile',\n    REGISTRATION: '/registration',\n    TEST: '/test',\n    NEW_PASSWORD: '/new-password',\n    LOGIN: '/login',\n    FORGOT_MY_PASSWORD: '/forgot-my-password',\n    NOT_FOUND: '/404'\n}\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Routes>\n            <Route path={'/'} element={<TestPage/>}/>\n            <Route path={PATH.PROFILE} element={<Profile/>}/>\n            <Route path={PATH.REGISTRATION} element={<Registration/>}/>\n            <Route path={PATH.TEST} element={<TestPage/>}/>\n            <Route path={PATH.NEW_PASSWORD} element={<NewPassword/>}/>\n            <Route path={PATH.LOGIN} element={<Login/>}/>\n            <Route path={PATH.FORGOT_MY_PASSWORD} element={<ForgotYourPassword/>}/>\n            <Route path='*' element={<NotFound/>} />\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type StateType = {}\n\nconst initialState: StateType = {}\n\nexport const forgotYourPasswordReducer = (state = initialState, action: ActionTypes): StateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = any","type StateType = {}\n\nconst initialState: StateType = {}\n\nexport const loginReducer = (state = initialState, action: ActionTypes): StateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = any","type StateType = {}\n\nconst initialState: StateType = {}\n\nexport const newPasswordReducer = (state = initialState, action: ActionTypes): StateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = any","type StateType = {}\n\nconst initialState: StateType = {}\n\nexport const profileReducer = (state = initialState, action: ActionTypes): StateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = any","type StateType = {}\n\nconst initialState: StateType = {}\n\nexport const registrationReducer = (state = initialState, action: ActionTypes): StateType => {\n    switch (action.type) {\n        default:\n            return state\n    }\n}\n\ntype ActionTypes = any","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {forgotYourPasswordReducer} from \"./forgot-your-password-reducer/forgot-your-password-reducer\";\nimport {loginReducer} from \"./login-reducer/login-reducer\";\nimport {newPasswordReducer} from \"./new-password-reducer/new-password-reducer\";\nimport {profileReducer} from \"./profile-reducer/profile-reducer\";\nimport {registrationReducer} from \"./registration-reducer/registration-reducer\";\nimport thunkMiddleware from 'redux-thunk'\n\n\nconst rootReducer = combineReducers({\n    forgotMyPassword: forgotYourPasswordReducer,\n    login: loginReducer,\n    newPassword: newPasswordReducer,\n    profile: profileReducer,\n    registration: registrationReducer,\n})\n\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3QLT1\",\"errorInput\":\"SuperInputText_errorInput__3srZ5\",\"error\":\"SuperInputText_error__2om_I\",\"input\":\"SuperInputText_input__3KLUF\"};"],"sourceRoot":""}